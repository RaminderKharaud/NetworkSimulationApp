 <Window x:Class="NetworkSimulationApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:local="clr-namespace:NetworkSimulationApp"
        xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
        Title="MainWindow" Height="700" Width="1025">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>


        <Style x:Key="ButtonBackground" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush  EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                        <GradientStop Color="Gray" Offset="0"/>
                        <GradientStop Color="Black" Offset="0.567"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GlassButton" TargetType="{x:Type Button}">
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                            CornerRadius="3" 
                            BorderThickness="1" 
                            Style="{DynamicResource ButtonBackground}"  
                            BorderBrush="Transparent"
                            RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter x:Name="ButtonContentPresenter"
                            VerticalAlignment="Center"  
                            HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush  EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="Gray" Offset="0.567"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter  TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush  EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                            <GradientStop Color="Gray" Offset="0"/>
                                            <GradientStop Color="Black" Offset="0.567"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="demoTemplate" DataType="{x:Type local:NetVertex}">
            <Grid>
                <Ellipse x:Name="VertexSurface" Height="15" Width="15"  Fill = "LightBlue"/>
                <TextBlock Text="{Binding ID}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property = "IsMouseOver" Value = "True">
                        <Setter TargetName = "VertexSurface" Property = "Fill"
                    Value = "Yellow"/>
                    </Trigger>
                </DataTemplate.Triggers>
        </DataTemplate>
        
        <Style TargetType="{x:Type graphsharp:VertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                        <StackPanel Orientation="Vertical">
                            <ContentPresenter Content="{TemplateBinding Vertex}" MouseLeftButtonDown="GraphNode_MouseLeftButtonDown" 
                                            ContentTemplate="{StaticResource demoTemplate}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style> 
    </Window.Resources>
    <Grid Background="#333333">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width ="*"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Background="#333333">
            <Menu DockPanel.Dock ="Top" 
                HorizontalAlignment="Left"
                Background="#333333" BorderBrush ="Black">
                <MenuItem Header="_File" Background="#333333" Foreground="White" FontSize="15">
                    <MenuItem Header="_Open" Background="#333333" Foreground="White" FontSize="15" Command="{Binding Path=OpenGraph}" CommandParameter="OpenNewGraph"/>
                    <MenuItem Header="_Save" Background="#333333" Foreground="White" FontSize="15" Command ="{Binding Path=SaveGraph}" CommandParameter="SaveGraph" />
                </MenuItem>
            </Menu>
        </DockPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Background="#333333">
            <Button Grid.Column="1" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="25" Content="Data Mode" Background="{Binding Path=DBColor}" Command="{Binding Path=DataMode}" Margin="10,21,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Height="40"/>
            <Button Grid.Column="1" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="30" Content="Start" Command="{Binding Path=Start}" Margin="10,21,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Height="50"/>
        </StackPanel>
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Background="#CCCCCC" Height="35" Orientation="Horizontal" >
                <Button x:Name="btnCreateGraph" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="15" Command="{Binding Path=CreateGraph}" CommandParameter="AddNewGraph"  Content=" Create New Graph "  Margin="10,3,0,0" Height="25" />
                <Button x:Name="btnVertex" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="15" Command="{Binding Path=CreateVertex}" CommandParameter="AddVertex"  Content=" New Vertex "  Margin="10,3,0,0" Height="25"/>
                <Button x:Name="btnRemoveVertex" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="15" Command="{Binding Path=RemoveVertex}" CommandParameter="RemoveVertex" Content=" Remove Vertex " Margin="10,3,0,0"  Height="25"/>
                <Button x:Name="btnEdge" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="15" Command="{Binding Path=CreateEdge}" CommandParameter="AddEdge" Content=" New Edge " Margin="10,3,0,0"  Height="25"/>
                <Button x:Name="btnRemoveEdge" Style="{ DynamicResource GlassButton}" Foreground="White" FontSize="15" Command="{Binding Path=RemoveEdge}" CommandParameter="RemoveEdge" Content=" Remove Edge " Margin="10,3,0,0"  Height="25"/>
            </StackPanel>
              <zoom:ZoomControl  Grid.Row="1"  Zoom="0.2" ZoomBoxOpacity="0.5" Background="White" >

                <local:NetGraphLayout x:Name="graphLayout" Margin="10"
						Graph="{Binding Path=Graph}"
						LayoutAlgorithmType="{Binding Path=LayoutAlgorithmType, Mode=OneWay}"
					    OverlapRemovalAlgorithmType="FSA" 
                    HighlightAlgorithmType="Simple" />
            </zoom:ZoomControl>
        </Grid>
    </Grid>
</Window>
